SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/root/AndroPyTool/FlowDroid/soot-trunk.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/root/AndroPyTool/FlowDroid/slf4j-simple-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
[main] INFO soot.jimple.infoflow.taintWrappers.EasyTaintWrapper - Loaded wrapper entries for 70 classes and 11 exclusions.
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.01294646 seconds
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.os.Bundle
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Context
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Intent
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0;
        com.koogame.SeaMinerGL.KooSeaMinerGL $r1;
        cn.koogame.android.SmsReceiver $r2;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label1:
        if $i0 == 0 goto label5;

        $r1 = new com.koogame.SeaMinerGL.KooSeaMinerGL;

        specialinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void <init>()>();

        if $i0 == 1 goto label5;

        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onCreate(android.os.Bundle)>(null);

     label2:
        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onStart()>();

     label3:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onResume()>();

        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onPause()>();

        if $i0 == 3 goto label3;

        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onStop()>();

        if $i0 == 4 goto label4;

        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onRestart()>();

        if $i0 == 5 goto label2;

     label4:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onDestroy()>();

     label5:
        if $i0 == 7 goto label7;

        $r2 = new cn.koogame.android.SmsReceiver;

        specialinvoke $r2.<cn.koogame.android.SmsReceiver: void <init>()>();

        if $i0 == 8 goto label7;

     label6:
        virtualinvoke $r2.<cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 10 goto label6;

     label7:
        if $i0 == 11 goto label1;

        return;
    }

[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.1 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 0.8 seconds.
[Spark] Solution found in 0.8 seconds.
Callback analysis done.
Warning: LinearLayout is a phantom class!
Warning: com.koogame.SeaMinerGL.LinearLayout is a phantom class!
Warning: android.view.LinearLayout is a phantom class!
Warning: TextView is a phantom class!
Warning: com.koogame.SeaMinerGL.TextView is a phantom class!
Warning: android.view.TextView is a phantom class!
Found 1 layout controls in file res/layout/main.xml
Found 2 layout controls in file res/layout/videoplay.xml
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.os.Bundle
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.SurfaceHolder
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.media.MediaPlayer
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.hardware.SensorEvent
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Context
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Intent
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0;
        com.koogame.SeaMinerGL.KooSeaMinerGL $r1;
        cn.koogame.ui.GLSurfaceView $r2;
        cn.koogame.ui.MediaPlayerView $r3;
        cn.koogame.ui.KooUiActivity$1 $r4;
        cn.koogame.ui.KooMediaPlayerView $r5;
        cn.koogame.android.SmsReceiver $r6;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label01:
        if $i0 == 0 goto label18;

        $r1 = new com.koogame.SeaMinerGL.KooSeaMinerGL;

        specialinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void <init>()>();

        if $i0 == 1 goto label18;

        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onCreate(android.os.Bundle)>(null);

     label02:
        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onStart()>();

     label03:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onResume()>();

        if $i0 == 3 goto label16;

     label04:
        $r2 = new cn.koogame.ui.GLSurfaceView;

        specialinvoke $r2.<cn.koogame.ui.GLSurfaceView: void <init>(android.content.Context)>($r1);

        if $i0 == 4 goto label05;

        virtualinvoke $r2.<cn.koogame.ui.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>(null);

     label05:
        if $i0 == 5 goto label06;

        virtualinvoke $r2.<cn.koogame.ui.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>(null, 0, 0, 0);

     label06:
        if $i0 == 6 goto label07;

        virtualinvoke $r2.<cn.koogame.ui.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>(null);

     label07:
        $r3 = new cn.koogame.ui.MediaPlayerView;

        specialinvoke $r3.<cn.koogame.ui.MediaPlayerView: void <init>(android.content.Context)>($r1);

        if $i0 == 7 goto label08;

        virtualinvoke $r3.<cn.koogame.ui.MediaPlayerView: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>(null, 0, 0);

     label08:
        if $i0 == 8 goto label09;

        virtualinvoke $r3.<cn.koogame.ui.MediaPlayerView: void surfaceCreated(android.view.SurfaceHolder)>(null);

     label09:
        if $i0 == 9 goto label10;

        virtualinvoke $r3.<cn.koogame.ui.MediaPlayerView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>(null, 0, 0, 0);

     label10:
        if $i0 == 10 goto label11;

        virtualinvoke $r3.<cn.koogame.ui.MediaPlayerView: void onPrepared(android.media.MediaPlayer)>(null);

     label11:
        if $i0 == 11 goto label12;

        virtualinvoke $r3.<cn.koogame.ui.MediaPlayerView: void surfaceDestroyed(android.view.SurfaceHolder)>(null);

     label12:
        $r4 = new cn.koogame.ui.KooUiActivity$1;

        specialinvoke $r4.<cn.koogame.ui.KooUiActivity$1: void <init>(cn.koogame.ui.KooUiActivity)>($r1);

        if $i0 == 12 goto label13;

        virtualinvoke $r4.<cn.koogame.ui.KooUiActivity$1: void onSensorChanged(android.hardware.SensorEvent)>(null);

     label13:
        if $i0 == 13 goto label14;

        staticinvoke <com.koogame.SeaMinerGL.KooSeaMinerGL: void <clinit>()>();

     label14:
        $r5 = new cn.koogame.ui.KooMediaPlayerView;

        specialinvoke $r5.<cn.koogame.ui.KooMediaPlayerView: void <init>(cn.koogame.ui.KooUiActivity)>($r1);

        if $i0 == 14 goto label15;

        virtualinvoke $r5.<cn.koogame.ui.KooMediaPlayerView: void onCompletion(android.media.MediaPlayer)>(null);

     label15:
        if $i0 == 15 goto label04;

     label16:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onPause()>();

        if $i0 == 16 goto label03;

        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onStop()>();

        if $i0 == 17 goto label17;

        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onRestart()>();

        if $i0 == 18 goto label02;

     label17:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onDestroy()>();

     label18:
        if $i0 == 20 goto label20;

        $r6 = new cn.koogame.android.SmsReceiver;

        specialinvoke $r6.<cn.koogame.android.SmsReceiver: void <init>()>();

        if $i0 == 21 goto label20;

     label19:
        virtualinvoke $r6.<cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 23 goto label19;

     label20:
        if $i0 == 26 goto label01;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 0.5 seconds.
[Spark] Solution found in 0.5 seconds.
Running incremental callback analysis for 2 components...
Incremental callback analysis done.
Found 16 callback methods for 2 components
Found {res/layout/videoplay.xml=[-1 - android.widget.LinearLayout, 2131034112 - cn.koogame.ui.KooMediaPlayerView], res/layout/main.xml=[-1 - android.widget.LinearLayout, -1 - android.widget.TextView]} layout controls
Entry point calculation done.
Created a SourceSinkManager with 89 sources, 133 sinks, and 16 callback methods.
Running data flow analysis...
Running data flow analysis on /apks/samples/3fc0e65a821a67e42df20a3d6570ab563d55a87ae9bd39bb6c69057c0e30caa6.apk with 89 sources and 133 sinks...
Starting infoflow computation...
[main] INFO soot.jimple.infoflow.Infoflow - Resetting Soot...
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
[main] INFO soot.jimple.infoflow.Infoflow - Basic class loading done.
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.os.Bundle
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.SurfaceHolder
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.media.MediaPlayer
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.hardware.SensorEvent
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Context
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Intent
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0;
        com.koogame.SeaMinerGL.KooSeaMinerGL $r1;
        cn.koogame.ui.MediaPlayerView $r2;
        cn.koogame.ui.KooUiActivity$1 $r3;
        cn.koogame.ui.KooMediaPlayerView $r4;
        cn.koogame.ui.GLSurfaceView $r5;
        cn.koogame.android.SmsReceiver $r6;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label01:
        if $i0 == 0 goto label18;

        $r1 = new com.koogame.SeaMinerGL.KooSeaMinerGL;

        specialinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void <init>()>();

        if $i0 == 1 goto label18;

        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onCreate(android.os.Bundle)>(null);

     label02:
        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onStart()>();

     label03:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onResume()>();

        if $i0 == 3 goto label16;

     label04:
        $r2 = new cn.koogame.ui.MediaPlayerView;

        specialinvoke $r2.<cn.koogame.ui.MediaPlayerView: void <init>(android.content.Context)>($r1);

        if $i0 == 4 goto label05;

        virtualinvoke $r2.<cn.koogame.ui.MediaPlayerView: void surfaceDestroyed(android.view.SurfaceHolder)>(null);

     label05:
        if $i0 == 5 goto label06;

        virtualinvoke $r2.<cn.koogame.ui.MediaPlayerView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>(null, 0, 0, 0);

     label06:
        if $i0 == 6 goto label07;

        virtualinvoke $r2.<cn.koogame.ui.MediaPlayerView: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>(null, 0, 0);

     label07:
        if $i0 == 7 goto label08;

        virtualinvoke $r2.<cn.koogame.ui.MediaPlayerView: void surfaceCreated(android.view.SurfaceHolder)>(null);

     label08:
        if $i0 == 8 goto label09;

        virtualinvoke $r2.<cn.koogame.ui.MediaPlayerView: void onPrepared(android.media.MediaPlayer)>(null);

     label09:
        if $i0 == 9 goto label10;

        staticinvoke <com.koogame.SeaMinerGL.KooSeaMinerGL: void <clinit>()>();

     label10:
        $r3 = new cn.koogame.ui.KooUiActivity$1;

        specialinvoke $r3.<cn.koogame.ui.KooUiActivity$1: void <init>(cn.koogame.ui.KooUiActivity)>($r1);

        if $i0 == 10 goto label11;

        virtualinvoke $r3.<cn.koogame.ui.KooUiActivity$1: void onSensorChanged(android.hardware.SensorEvent)>(null);

     label11:
        $r4 = new cn.koogame.ui.KooMediaPlayerView;

        specialinvoke $r4.<cn.koogame.ui.KooMediaPlayerView: void <init>(cn.koogame.ui.KooUiActivity)>($r1);

        if $i0 == 11 goto label12;

        virtualinvoke $r4.<cn.koogame.ui.KooMediaPlayerView: void onCompletion(android.media.MediaPlayer)>(null);

     label12:
        $r5 = new cn.koogame.ui.GLSurfaceView;

        specialinvoke $r5.<cn.koogame.ui.GLSurfaceView: void <init>(android.content.Context)>($r1);

        if $i0 == 12 goto label13;

        virtualinvoke $r5.<cn.koogame.ui.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>(null);

     label13:
        if $i0 == 13 goto label14;

        virtualinvoke $r5.<cn.koogame.ui.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>(null);

     label14:
        if $i0 == 14 goto label15;

        virtualinvoke $r5.<cn.koogame.ui.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>(null, 0, 0, 0);

     label15:
        if $i0 == 15 goto label04;

     label16:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onPause()>();

        if $i0 == 16 goto label03;

        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onStop()>();

        if $i0 == 17 goto label17;

        virtualinvoke $r1.<cn.koogame.ui.KooUiActivity: void onRestart()>();

        if $i0 == 18 goto label02;

     label17:
        virtualinvoke $r1.<com.koogame.SeaMinerGL.KooSeaMinerGL: void onDestroy()>();

     label18:
        if $i0 == 20 goto label20;

        $r6 = new cn.koogame.android.SmsReceiver;

        specialinvoke $r6.<cn.koogame.android.SmsReceiver: void <init>()>();

        if $i0 == 21 goto label20;

     label19:
        virtualinvoke $r6.<cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 23 goto label19;

     label20:
        if $i0 == 26 goto label01;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 1.0 seconds.
[Spark] Solution found in 1.0 seconds.
[main] INFO soot.jimple.infoflow.Infoflow - Callgraph construction took 1.072409354 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.Infoflow - Dead code elimination took 0.121859808 seconds
[main] INFO soot.jimple.infoflow.Infoflow - Callgraph has 1774 edges
[main] INFO soot.jimple.infoflow.Infoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.data.FlowDroidMemoryManager - Initializing FlowDroid memory manager...
[main] INFO soot.jimple.infoflow.data.FlowDroidMemoryManager - FDMM: Path data erasure enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.Infoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.Infoflow - Source lookup done, found 49 sources and 48 sinks.
[main] INFO soot.jimple.infoflow.Infoflow - Taint wrapper hits: 859
[main] INFO soot.jimple.infoflow.Infoflow - Taint wrapper misses: 4142
[main] INFO soot.jimple.infoflow.Infoflow - IFDS problem with 16060 forward and 3057 backward edges solved, processing 28 results...
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Obtainted 28 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 1 with task id 0
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 2 with task id 1
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 3 with task id 2
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 4 with task id 3
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 5 with task id 4
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 6 with task id 5
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 7 with task id 6
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 8 with task id 7
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 9 with task id 8
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 10 with task id 9
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 11 with task id 10
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 12 with task id 11
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 13 with task id 12
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 14 with task id 13
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 15 with task id 14
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 16 with task id 15
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 17 with task id 16
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 18 with task id 17
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 19 with task id 18
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 20 with task id 19
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 21 with task id 20
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 22 with task id 21
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 23 with task id 22
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 24 with task id 23
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 25 with task id 24
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 26 with task id 25
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 27 with task id 26
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 28 with task id 27
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Path processing took 0.016246788 seconds in total
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 5) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($r0, null, $r1, null, null) in method <cn.koogame.android.SmsReceiver: void sendSms(java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r2 := @parameter1: android.content.Intent in method <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1) in method <cn.koogame.android.PayDialog: void alertPayFailed()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage()>() in method <cn.koogame.android.PayDialog: void alertPayFailed()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("sms", $r4) in method <cn.koogame.android.SmsReceiver$1: void run()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r2 := @parameter1: android.content.Intent in method <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 9) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a c(double)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 9) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 3) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 3) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a f(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(byte[])> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1) in method <cn.koogame.android.PayDialog: void alertPaySuccess()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage()>() in method <cn.koogame.android.PayDialog: void alertPaySuccess()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(int)>($b1) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a f(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 5) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a f(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a d(int)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("nick", $r8) in method <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r2 := @parameter1: android.content.Intent in method <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1) in method <cn.koogame.android.PayDialog: void openWaitDialog()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage()>() in method <cn.koogame.android.PayDialog: void openWaitDialog()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 9) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2) in method <com.tendcloud.tenddata.c.a: com.tendcloud.tenddata.c.a b(long)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) in method <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() in method <com.tendcloud.tenddata.s: java.lang.String d()>
Found a flow to sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 5), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($r0, null, $r1, null, null), from the following sources:
	- $r2 := @parameter1: android.content.Intent (in <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>)
Found a flow to sink virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1), from the following sources:
	- $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage()>() (in <cn.koogame.android.PayDialog: void alertPayFailed()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("sms", $r4), from the following sources:
	- $r2 := @parameter1: android.content.Intent (in <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 9), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 9), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 5), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 3), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 3), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1), from the following sources:
	- $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage()>() (in <cn.koogame.android.PayDialog: void alertPaySuccess()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r1.<java.io.OutputStream: void write(int)>($b1), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, 5), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 3), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("nick", $r8), from the following sources:
	- $r2 := @parameter1: android.content.Intent (in <cn.koogame.android.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>)
Found a flow to sink virtualinvoke $r2.<android.os.Handler: boolean sendMessage(android.os.Message)>($r1), from the following sources:
	- $r1 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage()>() (in <cn.koogame.android.PayDialog: void openWaitDialog()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 9), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Found a flow to sink virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, 2), from the following sources:
	- $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r1) (in <com.tendcloud.tenddata.TCAgent: java.lang.String b(android.os.Bundle,java.lang.String)>)
	- $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>() (in <com.tendcloud.tenddata.s: java.lang.String d()>)
Maximum memory consumption: 231.888488 MB
Analysis has run for 6.113693643 seconds
