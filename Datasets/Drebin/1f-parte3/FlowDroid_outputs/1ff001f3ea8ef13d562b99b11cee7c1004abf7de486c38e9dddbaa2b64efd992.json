SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/root/AndroPyTool/FlowDroid/soot-trunk.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/root/AndroPyTool/FlowDroid/slf4j-simple-1.7.5.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
[main] INFO soot.jimple.infoflow.taintWrappers.EasyTaintWrapper - Loaded wrapper entries for 70 classes and 11 exclusions.
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.019310333 seconds
Could not find sdk version in Android manifest! Using default: 15
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.os.Bundle
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Context
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Intent
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0;
        com.ZS.ZSJokeReader.ZSJokeReader $r1;
        com.zhenshi.adsdk.InstallReceiver $r2;
        com.ZS.ZSJokeReader.ZSLogin $r3;
        com.ZS.ZSJokeReader.SmsReceiver $r4;
        com.zhenshi.adsdk.AdSdkActivity $r5;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label01:
        if $i0 == 0 goto label04;

        $r1 = new com.ZS.ZSJokeReader.ZSJokeReader;

        specialinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void <init>()>();

        if $i0 == 1 goto label04;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onCreate(android.os.Bundle)>(null);

     label02:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onResume()>();

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onPause()>();

        if $i0 == 3 goto label02;

        if $i0 == 4 goto label03;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onRestart()>();

        if $i0 == 5 goto label02;

     label03:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onDestroy()>();

     label04:
        if $i0 == 7 goto label06;

        $r2 = new com.zhenshi.adsdk.InstallReceiver;

        specialinvoke $r2.<com.zhenshi.adsdk.InstallReceiver: void <init>()>();

        if $i0 == 8 goto label06;

     label05:
        virtualinvoke $r2.<com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 10 goto label05;

     label06:
        if $i0 == 11 goto label09;

        $r3 = new com.ZS.ZSJokeReader.ZSLogin;

        specialinvoke $r3.<com.ZS.ZSJokeReader.ZSLogin: void <init>()>();

        if $i0 == 12 goto label09;

        virtualinvoke $r3.<com.ZS.ZSJokeReader.ZSLogin: void onCreate(android.os.Bundle)>(null);

     label07:
        virtualinvoke $r3.<com.ZS.ZSJokeReader.ZSLogin: void onResume()>();

        virtualinvoke $r3.<com.ZS.ZSJokeReader.ZSLogin: void onPause()>();

        if $i0 == 14 goto label07;

        if $i0 == 15 goto label08;

        virtualinvoke $r3.<com.ZS.ZSJokeReader.ZSLogin: void onRestart()>();

        if $i0 == 16 goto label07;

     label08:
        virtualinvoke $r3.<com.ZS.ZSJokeReader.ZSLogin: void onDestroy()>();

     label09:
        if $i0 == 18 goto label11;

        $r4 = new com.ZS.ZSJokeReader.SmsReceiver;

        specialinvoke $r4.<com.ZS.ZSJokeReader.SmsReceiver: void <init>()>();

        if $i0 == 19 goto label11;

     label10:
        virtualinvoke $r4.<com.ZS.ZSJokeReader.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 21 goto label10;

     label11:
        if $i0 == 22 goto label14;

        $r5 = new com.zhenshi.adsdk.AdSdkActivity;

        specialinvoke $r5.<com.zhenshi.adsdk.AdSdkActivity: void <init>()>();

        if $i0 == 23 goto label14;

        virtualinvoke $r5.<com.zhenshi.adsdk.AdSdkActivity: void onCreate(android.os.Bundle)>(null);

     label12:
        if $i0 == 26 goto label13;

        if $i0 == 27 goto label12;

     label13:
        virtualinvoke $r5.<com.zhenshi.adsdk.AdSdkActivity: void onDestroy()>();

     label14:
        if $i0 == 29 goto label01;

        return;
    }

[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.1 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 1.5 seconds.
[Spark] Solution found in 1.5 seconds.
Callback analysis done.
Warning: LinearLayout is a phantom class!
Warning: com.ZS.ZSJokeReader.LinearLayout is a phantom class!
Warning: android.view.LinearLayout is a phantom class!
Warning: RelativeLayout is a phantom class!
Warning: com.ZS.ZSJokeReader.RelativeLayout is a phantom class!
Warning: android.view.RelativeLayout is a phantom class!
Warning: ImageView is a phantom class!
Warning: com.ZS.ZSJokeReader.ImageView is a phantom class!
Warning: android.view.ImageView is a phantom class!
Warning: ViewFlipper is a phantom class!
Warning: com.ZS.ZSJokeReader.ViewFlipper is a phantom class!
Warning: android.view.ViewFlipper is a phantom class!
Warning: TextView is a phantom class!
Warning: com.ZS.ZSJokeReader.TextView is a phantom class!
Warning: android.view.TextView is a phantom class!
Found 1 layout controls in file res/layout/main.xml
Found 2 layout controls in file res/layout/zslogin.xml
Could not find sdk version in Android manifest! Using default: 15
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.os.Bundle
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.MotionEvent
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.res.Configuration
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.View
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.KeyEvent
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.DialogInterface
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Context
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Intent
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0;
        com.ZS.ZSJokeReader.ZSJokeReader $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.app.Dialog $r2, $r8;
        com.ZS.ZSJokeReader.ZSJokeReader$1 $r3;
        com.zhenshi.adsdk.InstallReceiver $r4;
        com.ZS.ZSJokeReader.ZSLogin $r5;
        com.ZS.ZSJokeReader.ZSLogin$1 $r6;
        com.ZS.ZSJokeReader.ZSLogin$5 $r7;
        com.ZS.ZSJokeReader.ZSLogin$6 $r9;
        com.ZS.ZSJokeReader.SmsReceiver $r10;
        com.zhenshi.adsdk.AdSdkActivity $r11;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label01:
        if $i0 == 0 goto label19;

        $r1 = new com.ZS.ZSJokeReader.ZSJokeReader;

        specialinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void <init>()>();

        if $i0 == 1 goto label19;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onCreate(android.os.Bundle)>(null);

     label02:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onResume()>();

        if $i0 == 3 goto label17;

     label03:
        if $i0 == 4 goto label04;

        $z0 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>(null, null, 0.0F, 0.0F);

     label04:
        if $i0 == 5 goto label05;

        $r2 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: android.app.Dialog onCreateDialog(int)>(0);

     label05:
        if $i0 == 6 goto label06;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onConfigurationChanged(android.content.res.Configuration)>(null);

     label06:
        if $i0 == 7 goto label07;

        $z1 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onSingleTapUp(android.view.MotionEvent)>(null);

     label07:
        if $i0 == 8 goto label08;

        $z2 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onDown(android.view.MotionEvent)>(null);

     label08:
        if $i0 == 9 goto label09;

        $z3 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onLongClick(android.view.View)>(null);

     label09:
        if $i0 == 10 goto label10;

        staticinvoke <com.ZS.ZSJokeReader.ZSJokeReader: void <clinit>()>();

     label10:
        if $i0 == 11 goto label11;

        $z4 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onTouchEvent(android.view.MotionEvent)>(null);

     label11:
        if $i0 == 12 goto label12;

        $z5 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onTouch(android.view.View,android.view.MotionEvent)>(null, null);

     label12:
        if $i0 == 13 goto label13;

        $z6 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>(null, null, 0.0F, 0.0F);

     label13:
        if $i0 == 14 goto label14;

        $z7 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onKeyDown(int,android.view.KeyEvent)>(0, null);

     label14:
        if $i0 == 15 goto label15;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onClick(android.view.View)>(null);

     label15:
        $r3 = new com.ZS.ZSJokeReader.ZSJokeReader$1;

        specialinvoke $r3.<com.ZS.ZSJokeReader.ZSJokeReader$1: void <init>(com.ZS.ZSJokeReader.ZSJokeReader)>($r1);

        if $i0 == 16 goto label16;

        virtualinvoke $r3.<com.ZS.ZSJokeReader.ZSJokeReader$1: void onClick(android.content.DialogInterface,int)>(null, 0);

     label16:
        if $i0 == 17 goto label03;

     label17:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onPause()>();

        if $i0 == 18 goto label02;

        if $i0 == 19 goto label18;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onRestart()>();

        if $i0 == 20 goto label02;

     label18:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onDestroy()>();

     label19:
        if $i0 == 22 goto label21;

        $r4 = new com.zhenshi.adsdk.InstallReceiver;

        specialinvoke $r4.<com.zhenshi.adsdk.InstallReceiver: void <init>()>();

        if $i0 == 23 goto label21;

     label20:
        virtualinvoke $r4.<com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 25 goto label20;

     label21:
        if $i0 == 26 goto label31;

        $r5 = new com.ZS.ZSJokeReader.ZSLogin;

        specialinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void <init>()>();

        if $i0 == 27 goto label31;

        virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void onCreate(android.os.Bundle)>(null);

     label22:
        virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void onResume()>();

        if $i0 == 29 goto label29;

     label23:
        $r6 = new com.ZS.ZSJokeReader.ZSLogin$1;

        specialinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin$1: void <init>(com.ZS.ZSJokeReader.ZSLogin)>($r5);

        if $i0 == 30 goto label24;

        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin$1: void onClick(android.content.DialogInterface,int)>(null, 0);

     label24:
        $r7 = new com.ZS.ZSJokeReader.ZSLogin$5;

        specialinvoke $r7.<com.ZS.ZSJokeReader.ZSLogin$5: void <init>(com.ZS.ZSJokeReader.ZSLogin)>($r5);

        if $i0 == 31 goto label25;

        virtualinvoke $r7.<com.ZS.ZSJokeReader.ZSLogin$5: void onClick(android.content.DialogInterface,int)>(null, 0);

     label25:
        if $i0 == 32 goto label26;

        $r8 = virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: android.app.Dialog onCreateDialog(int)>(0);

     label26:
        if $i0 == 33 goto label27;

        virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void onClick(android.view.View)>(null);

     label27:
        $r9 = new com.ZS.ZSJokeReader.ZSLogin$6;

        specialinvoke $r9.<com.ZS.ZSJokeReader.ZSLogin$6: void <init>(com.ZS.ZSJokeReader.ZSLogin)>($r5);

        if $i0 == 34 goto label28;

        virtualinvoke $r9.<com.ZS.ZSJokeReader.ZSLogin$6: void onClick(android.content.DialogInterface,int)>(null, 0);

     label28:
        if $i0 == 35 goto label23;

     label29:
        virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void onPause()>();

        if $i0 == 36 goto label22;

        if $i0 == 37 goto label30;

        virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void onRestart()>();

        if $i0 == 38 goto label22;

     label30:
        virtualinvoke $r5.<com.ZS.ZSJokeReader.ZSLogin: void onDestroy()>();

     label31:
        if $i0 == 40 goto label33;

        $r10 = new com.ZS.ZSJokeReader.SmsReceiver;

        specialinvoke $r10.<com.ZS.ZSJokeReader.SmsReceiver: void <init>()>();

        if $i0 == 41 goto label33;

     label32:
        virtualinvoke $r10.<com.ZS.ZSJokeReader.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 43 goto label32;

     label33:
        if $i0 == 44 goto label41;

        $r11 = new com.zhenshi.adsdk.AdSdkActivity;

        specialinvoke $r11.<com.zhenshi.adsdk.AdSdkActivity: void <init>()>();

        if $i0 == 45 goto label41;

        virtualinvoke $r11.<com.zhenshi.adsdk.AdSdkActivity: void onCreate(android.os.Bundle)>(null);

     label34:
        if $i0 == 47 goto label39;

     label35:
        if $i0 == 48 goto label36;

        virtualinvoke $r11.<com.zhenshi.adsdk.AdSdkActivity: void onConfigurationChanged(android.content.res.Configuration)>(null);

     label36:
        if $i0 == 49 goto label37;

        virtualinvoke $r11.<com.zhenshi.adsdk.AdSdkActivity: void finish()>();

     label37:
        if $i0 == 50 goto label38;

        virtualinvoke $r11.<com.zhenshi.adsdk.AdSdkActivity: void onBackPressed()>();

     label38:
        if $i0 == 51 goto label35;

     label39:
        if $i0 == 52 goto label34;

        if $i0 == 53 goto label40;

        if $i0 == 54 goto label34;

     label40:
        virtualinvoke $r11.<com.zhenshi.adsdk.AdSdkActivity: void onDestroy()>();

     label41:
        if $i0 == 56 goto label01;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 0.6 seconds.
[Spark] Solution found in 0.6 seconds.
Running incremental callback analysis for 5 components...
Incremental callback analysis done.
Found 43 callback methods for 5 components
Found {res/layout/zslogin.xml=[-1 - android.widget.LinearLayout, 2131099660 - android.widget.ImageView], res/layout/main.xml=[2131099655 - android.widget.ImageView, 2131099656 - android.widget.ViewFlipper, 2131099657 - android.widget.TextView, 2131099658 - android.widget.TextView, 2131099651 - android.widget.ImageView, 2131099654 - android.widget.ImageView, 2131099652 - android.widget.ImageView, 2131099653 - android.widget.ImageView, 2131099649 - android.widget.RelativeLayout, 2131099659 - android.widget.ImageView, 2131099648 - android.widget.LinearLayout, 2131099650 - com.zhenshi.adsdk.AdView]} layout controls
Entry point calculation done.
Created a SourceSinkManager with 89 sources, 133 sinks, and 43 callback methods.
Running data flow analysis...
Running data flow analysis on /apks/samples/1ff001f3ea8ef13d562b99b11cee7c1004abf7de486c38e9dddbaa2b64efd992.apk with 89 sources and 133 sinks...
Could not find sdk version in Android manifest! Using default: 15
Starting infoflow computation...
[main] INFO soot.jimple.infoflow.Infoflow - Resetting Soot...
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
[main] INFO soot.jimple.infoflow.Infoflow - Basic class loading done.
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.os.Bundle
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.DialogInterface
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.MotionEvent
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.View
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.res.Configuration
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.view.KeyEvent
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Context
[main] WARN soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Cannot generate constructor for phantom class android.content.Intent
[main] INFO soot.jimple.infoflow.entryPointCreators.AndroidEntryPointCreator - Generated main method:
    public static void dummyMainMethod(java.lang.String[])
    {
        java.lang.String[] $r0;
        int $i0;
        com.ZS.ZSJokeReader.ZSJokeReader $r1;
        com.ZS.ZSJokeReader.ZSJokeReader$1 $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.app.Dialog $r3, $r10;
        com.zhenshi.adsdk.AdView $r4;
        com.zhenshi.adsdk.InstallReceiver $r5;
        com.ZS.ZSJokeReader.ZSLogin $r6;
        com.ZS.ZSJokeReader.ZSLogin$5 $r7;
        com.ZS.ZSJokeReader.ZSLogin$1 $r8;
        com.ZS.ZSJokeReader.ZSLogin$6 $r9;
        com.ZS.ZSJokeReader.SmsReceiver $r11;
        com.zhenshi.adsdk.AdSdkActivity $r12;

        $r0 := @parameter0: java.lang.String[];

        $i0 = 0;

     label01:
        if $i0 == 0 goto label27;

        $r1 = new com.ZS.ZSJokeReader.ZSJokeReader;

        specialinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void <init>()>();

        if $i0 == 1 goto label27;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onCreate(android.os.Bundle)>(null);

     label02:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onResume()>();

        if $i0 == 3 goto label25;

     label03:
        $r2 = new com.ZS.ZSJokeReader.ZSJokeReader$1;

        specialinvoke $r2.<com.ZS.ZSJokeReader.ZSJokeReader$1: void <init>(com.ZS.ZSJokeReader.ZSJokeReader)>($r1);

        if $i0 == 4 goto label04;

        virtualinvoke $r2.<com.ZS.ZSJokeReader.ZSJokeReader$1: void onClick(android.content.DialogInterface,int)>(null, 0);

     label04:
        if $i0 == 5 goto label05;

        $z0 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onSingleTapUp(android.view.MotionEvent)>(null);

     label05:
        if $i0 == 6 goto label06;

        $z1 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onLongClick(android.view.View)>(null);

     label06:
        if $i0 == 7 goto label07;

        $r3 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: android.app.Dialog onCreateDialog(int)>(0);

     label07:
        if $i0 == 8 goto label08;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onClick(android.view.View)>(null);

     label08:
        if $i0 == 9 goto label09;

        $z2 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onTouchEvent(android.view.MotionEvent)>(null);

     label09:
        if $i0 == 10 goto label10;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onConfigurationChanged(android.content.res.Configuration)>(null);

     label10:
        if $i0 == 11 goto label11;

        $z3 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>(null, null, 0.0F, 0.0F);

     label11:
        if $i0 == 12 goto label12;

        $z4 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>(null, null, 0.0F, 0.0F);

     label12:
        if $i0 == 13 goto label13;

        $z5 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onTouch(android.view.View,android.view.MotionEvent)>(null, null);

     label13:
        if $i0 == 14 goto label14;

        staticinvoke <com.ZS.ZSJokeReader.ZSJokeReader: void <clinit>()>();

     label14:
        if $i0 == 15 goto label15;

        $z6 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onKeyDown(int,android.view.KeyEvent)>(0, null);

     label15:
        if $i0 == 16 goto label16;

        $z7 = virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: boolean onDown(android.view.MotionEvent)>(null);

     label16:
        $r4 = new com.zhenshi.adsdk.AdView;

        specialinvoke $r4.<com.zhenshi.adsdk.AdView: void <init>(android.app.Activity)>($r1);

        if $i0 == 17 goto label17;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void onMeasure(int,int)>(0, 0);

     label17:
        if $i0 == 18 goto label18;

        $z8 = virtualinvoke $r4.<com.zhenshi.adsdk.AdView: boolean dispatchTouchEvent(android.view.MotionEvent)>(null);

     label18:
        if $i0 == 19 goto label19;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void onWindowFocusChanged(boolean)>(false);

     label19:
        if $i0 == 20 goto label20;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void onWindowVisibilityChanged(int)>(0);

     label20:
        if $i0 == 21 goto label21;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void setVisibility(int)>(0);

     label21:
        if $i0 == 22 goto label22;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void onDetachedFromWindow()>();

     label22:
        if $i0 == 23 goto label23;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void setEnabled(boolean)>(false);

     label23:
        if $i0 == 24 goto label24;

        virtualinvoke $r4.<com.zhenshi.adsdk.AdView: void onAttachedToWindow()>();

     label24:
        if $i0 == 25 goto label03;

     label25:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onPause()>();

        if $i0 == 26 goto label02;

        if $i0 == 27 goto label26;

        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onRestart()>();

        if $i0 == 28 goto label02;

     label26:
        virtualinvoke $r1.<com.ZS.ZSJokeReader.ZSJokeReader: void onDestroy()>();

     label27:
        if $i0 == 30 goto label29;

        $r5 = new com.zhenshi.adsdk.InstallReceiver;

        specialinvoke $r5.<com.zhenshi.adsdk.InstallReceiver: void <init>()>();

        if $i0 == 31 goto label29;

     label28:
        virtualinvoke $r5.<com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 33 goto label28;

     label29:
        if $i0 == 34 goto label39;

        $r6 = new com.ZS.ZSJokeReader.ZSLogin;

        specialinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void <init>()>();

        if $i0 == 35 goto label39;

        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void onCreate(android.os.Bundle)>(null);

     label30:
        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void onResume()>();

        if $i0 == 37 goto label37;

     label31:
        $r7 = new com.ZS.ZSJokeReader.ZSLogin$5;

        specialinvoke $r7.<com.ZS.ZSJokeReader.ZSLogin$5: void <init>(com.ZS.ZSJokeReader.ZSLogin)>($r6);

        if $i0 == 38 goto label32;

        virtualinvoke $r7.<com.ZS.ZSJokeReader.ZSLogin$5: void onClick(android.content.DialogInterface,int)>(null, 0);

     label32:
        $r8 = new com.ZS.ZSJokeReader.ZSLogin$1;

        specialinvoke $r8.<com.ZS.ZSJokeReader.ZSLogin$1: void <init>(com.ZS.ZSJokeReader.ZSLogin)>($r6);

        if $i0 == 39 goto label33;

        virtualinvoke $r8.<com.ZS.ZSJokeReader.ZSLogin$1: void onClick(android.content.DialogInterface,int)>(null, 0);

     label33:
        $r9 = new com.ZS.ZSJokeReader.ZSLogin$6;

        specialinvoke $r9.<com.ZS.ZSJokeReader.ZSLogin$6: void <init>(com.ZS.ZSJokeReader.ZSLogin)>($r6);

        if $i0 == 40 goto label34;

        virtualinvoke $r9.<com.ZS.ZSJokeReader.ZSLogin$6: void onClick(android.content.DialogInterface,int)>(null, 0);

     label34:
        if $i0 == 41 goto label35;

        $r10 = virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: android.app.Dialog onCreateDialog(int)>(0);

     label35:
        if $i0 == 42 goto label36;

        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void onClick(android.view.View)>(null);

     label36:
        if $i0 == 43 goto label31;

     label37:
        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void onPause()>();

        if $i0 == 44 goto label30;

        if $i0 == 45 goto label38;

        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void onRestart()>();

        if $i0 == 46 goto label30;

     label38:
        virtualinvoke $r6.<com.ZS.ZSJokeReader.ZSLogin: void onDestroy()>();

     label39:
        if $i0 == 48 goto label41;

        $r11 = new com.ZS.ZSJokeReader.SmsReceiver;

        specialinvoke $r11.<com.ZS.ZSJokeReader.SmsReceiver: void <init>()>();

        if $i0 == 49 goto label41;

     label40:
        virtualinvoke $r11.<com.ZS.ZSJokeReader.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null);

        if $i0 == 51 goto label40;

     label41:
        if $i0 == 52 goto label49;

        $r12 = new com.zhenshi.adsdk.AdSdkActivity;

        specialinvoke $r12.<com.zhenshi.adsdk.AdSdkActivity: void <init>()>();

        if $i0 == 53 goto label49;

        virtualinvoke $r12.<com.zhenshi.adsdk.AdSdkActivity: void onCreate(android.os.Bundle)>(null);

     label42:
        if $i0 == 55 goto label47;

     label43:
        if $i0 == 56 goto label44;

        virtualinvoke $r12.<com.zhenshi.adsdk.AdSdkActivity: void onConfigurationChanged(android.content.res.Configuration)>(null);

     label44:
        if $i0 == 57 goto label45;

        virtualinvoke $r12.<com.zhenshi.adsdk.AdSdkActivity: void finish()>();

     label45:
        if $i0 == 58 goto label46;

        virtualinvoke $r12.<com.zhenshi.adsdk.AdSdkActivity: void onBackPressed()>();

     label46:
        if $i0 == 59 goto label43;

     label47:
        if $i0 == 60 goto label42;

        if $i0 == 61 goto label48;

        if $i0 == 62 goto label42;

     label48:
        virtualinvoke $r12.<com.zhenshi.adsdk.AdSdkActivity: void onDestroy()>();

     label49:
        if $i0 == 64 goto label01;

        return;
    }

[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[Spark] Pointer Assignment Graph in 0.0 seconds.
[Spark] Type masks in 0.0 seconds.
[Spark] Pointer Graph simplified in 0.0 seconds.
[Spark] Propagation in 0.8 seconds.
[Spark] Solution found in 0.8 seconds.
[main] INFO soot.jimple.infoflow.Infoflow - Callgraph construction took 0.876603101 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[main] INFO soot.jimple.infoflow.Infoflow - Dead code elimination took 0.101518287 seconds
[main] INFO soot.jimple.infoflow.Infoflow - Callgraph has 1403 edges
[main] INFO soot.jimple.infoflow.Infoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.data.FlowDroidMemoryManager - Initializing FlowDroid memory manager...
[main] INFO soot.jimple.infoflow.data.FlowDroidMemoryManager - FDMM: Path data erasure enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.android.InfoflowAndroidConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.Infoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.Infoflow - Source lookup done, found 57 sources and 58 sinks.
[main] INFO soot.jimple.infoflow.Infoflow - Taint wrapper hits: 829
[main] INFO soot.jimple.infoflow.Infoflow - Taint wrapper misses: 1434
[main] INFO soot.jimple.infoflow.Infoflow - IFDS problem with 8430 forward and 987 backward edges solved, processing 10 results...
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Obtainted 10 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 1 with task id 0
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 2 with task id 1
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 3 with task id 2
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 4 with task id 3
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 5 with task id 4
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 6 with task id 5
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 7 with task id 6
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 8 with task id 7
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 9 with task id 8
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Building path 10 with task id 9
[main] INFO soot.jimple.infoflow.data.pathBuilders.ContextInsensitiveSourceFinder - Path processing took 0.00347886 seconds in total
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdMobSDK", $r13) in method <com.zhenshi.adsdk.InstallReceiver: void a(android.content.Context,android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r13 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r13) in method <com.zhenshi.adsdk.InstallReceiver: void a(android.content.Context,android.content.Intent)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdMobSDK", $r3) in method <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 := @parameter0: android.content.Context in method <com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdMobSDK", $r2) in method <com.zhenshi.adsdk.AdManager: void setPublisherId(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("BDMOB_PUBLISHER_ID") in method <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r2) in method <com.bada.lbs.business.TransMsg: java.lang.String getMsg(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r9 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>() in method <com.bada.lbs.business.TransMsg: java.lang.String getMsg(java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r7 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>() in method <com.ZS.ZSJokeReader.ZSLogin: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AdMobSDK", $r3) in method <com.zhenshi.adsdk.AdManager: void getPublishInfo(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 := @parameter0: android.content.Context in method <com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdMobSDK", $r0) in method <com.zhenshi.adsdk.AdManager: void clientError(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("BDMOB_PUBLISHER_ID") in method <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r2) in method <com.zhenshi.adsdk.tools.TransMsg: java.lang.String getMsg(java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("BDMOB_PUBLISHER_ID") in method <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r3 = virtualinvoke $r9.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>() in method <com.zhenshi.adsdk.AdView: void <init>(android.content.Context,android.util.AttributeSet,int)>
[main] INFO soot.jimple.infoflow.Infoflow - - $r7 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>() in method <com.zhenshi.adsdk.tools.TransMsg: java.lang.String getMsg(java.lang.String)>
[main] INFO soot.jimple.infoflow.Infoflow - The sink staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AdMobSDK", $r3) in method <com.zhenshi.adsdk.AdManager: void getPublishInfo(android.content.Context)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.Infoflow - - $r1 := @parameter0: android.content.Context in method <com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>
Found a flow to sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdMobSDK", $r13), from the following sources:
	- $r13 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r13) (in <com.zhenshi.adsdk.InstallReceiver: void a(android.content.Context,android.content.Intent)>)
Found a flow to sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdMobSDK", $r3), from the following sources:
	- $r1 := @parameter0: android.content.Context (in <com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>)
Found a flow to sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AdMobSDK", $r2), from the following sources:
	- $r1 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("BDMOB_PUBLISHER_ID") (in <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)>)
Found a flow to sink virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r2), from the following sources:
	- $r9 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>() (in <com.bada.lbs.business.TransMsg: java.lang.String getMsg(java.lang.String)>)
	- $r7 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>() (in <com.ZS.ZSJokeReader.ZSLogin: void onCreate(android.os.Bundle)>)
Found a flow to sink staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AdMobSDK", $r3), from the following sources:
	- $r1 := @parameter0: android.content.Context (in <com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>)
Found a flow to sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AdMobSDK", $r0), from the following sources:
	- $r1 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("BDMOB_PUBLISHER_ID") (in <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)>)
Found a flow to sink virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r2), from the following sources:
	- $r1 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("BDMOB_PUBLISHER_ID") (in <com.zhenshi.adsdk.AdManager: java.lang.String getVal4ManifestXml(android.os.Bundle,java.lang.String)>)
	- $r3 = virtualinvoke $r9.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>() (in <com.zhenshi.adsdk.AdView: void <init>(android.content.Context,android.util.AttributeSet,int)>)
	- $r7 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>() (in <com.zhenshi.adsdk.tools.TransMsg: java.lang.String getMsg(java.lang.String)>)
Found a flow to sink staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AdMobSDK", $r3), from the following sources:
	- $r1 := @parameter0: android.content.Context (in <com.zhenshi.adsdk.InstallReceiver: void onReceive(android.content.Context,android.content.Intent)>)
Maximum memory consumption: 168.193832 MB
Analysis has run for 7.931292526 seconds
